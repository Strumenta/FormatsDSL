import de.itemis.mps.gradle.BuildLanguages
import de.itemis.mps.gradle.TestLanguages
import de.itemis.mps.gradle.GenerateLibrariesXml
import de.itemis.mps.gradle.RunAntScript

buildscript {
    repositories {
        maven { url 'https://projects.itemis.de/nexus/content/repositories/mbeddr' }
        mavenCentral()
    }

    dependencies {
        classpath 'de.itemis.mps:mps-gradle-plugin:1.0.85.03fbeda'
    }
}

group "com.strumenta.formatsdsl"
description = "Formats DSL"

configurations {
    mps
    mpsArtifacts
    mpsExtensions
    jdk
    ant_lib
    libs
    distribution
}

ext.mpsVersion = '2019.1.3'
ext.mpsExtensionsVersion = '2019.1.988.25746fd'

repositories {
    mavenCentral()
    maven {
        url 'https://projects.itemis.de/nexus/content/groups/OS/'
    }
}

dependencies {
    ant_lib "org.apache.ant:ant-junit:1.10.1"
    mps "com.jetbrains:mps:$mpsVersion"
    mpsExtensions "de.itemis.mps:extensions:$mpsExtensionsVersion"
}


if (!hasProperty("jdk_home")) {
    def java_home = System.properties['java.home']
    def jdk_home = java_home
    if (!file("$jdk_home/lib/tools.jar").isFile()) {
        jdk_home = jdk_home + "/.."
    }
    if (!file("$jdk_home/lib/tools.jar").isFile()) {
        throw new GradleException("Not finding the JDK...")
    }
    ext.jdk_home = jdk_home
}

ext.artifactsDir = new File(rootDir, 'artifacts')
ext.mpsDir = new File(artifactsDir, 'mps')
ext.buildScriptClasspath = project.configurations.ant_lib.fileCollection({
    true
}) + project.files("$project.jdk_home/lib/tools.jar")
ext.antScriptArgs =  [
    "-Dmps.home=${mpsDir.getAbsolutePath()}",
    "-Dartifacts.root=${artifactsDir.getAbsolutePath()}"
]

task resolveMps(type: Copy) {
    from {
        configurations.mps.resolve().collect { zipTree(it) }
    }
    into mpsDir
}

task resolveMpsArtifacts(type: Copy) {
	from {
		configurations.mpsArtifacts.resolve().collect { zipTree(it) }
	}
	into artifactsDir
}

task resolveMpsExtensions(type: Copy) {
        dependsOn configurations.mpsExtensions
        from {
            configurations.mpsExtensions.resolve().collect { zipTree(it) }
        }
        into artifactsDir
    }

task setuplocal {
	dependsOn resolveMpsArtifacts
	dependsOn resolveMpsExtensions
}

task generateBuildAntScripts(type: BuildLanguages, dependsOn: [resolveMps, resolveMpsArtifacts, resolveMpsExtensions]) {
    scriptArgs = antScriptArgs
    scriptClasspath = buildScriptClasspath
    script new File('build-meta.xml')
}

task buildLanguages(type: BuildLanguages, dependsOn: [generateBuildAntScripts]) {
    scriptArgs = antScriptArgs
    scriptClasspath = buildScriptClasspath
    script new File('build-languages.xml')
}

// ext.mbeddrPlatformVersion = '1.2.21553.14a910d'
// ext.iets3opensourceVersion = '0.2.3754.7f76cf6'

// dependencies {
// 	// ant_lib "org.apache.ant:ant-junit:1.10.1"
// 	// mps "com.jetbrains:mps:$mpsVersion"
// 	// mpsArtifacts "org.iets3:opensource:$iets3opensourceVersion"

// 	// distribution "com.jetbrains.jdk:jdk:8u152b1343.26:windows_x64@tgz"   
//  //    distribution "com.jetbrains.jdk:jdk:8u152b1343.26:osx_x64@tgz" 
// }


